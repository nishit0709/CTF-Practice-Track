const axios = require('axios').default

let original_cookie = 'WXJqcVJMT2QyV2JBQ0hxRTlsQXJvaDJWVlJ4djkyYmowaHNPRlMvcE5OSTBXVkJvREpycFQ0SXl6U21UZkxJNXp0V29tblJxSzdNb3FDNS9jV1pvb1FJRGNlTGI1d2tOYVNUc0c4VFI3bDZPd256VnFKUll1VzhER3JyUElTRHI='
const buf = Buffer.from(original_cookie, 'base64')
original_cookie = Array.from(buf)

function bitFlip(cookie_pos, bit_pos){
    let altered_cookie = original_cookie
    const flipped = altered_cookie[cookie_pos] ^ bit_pos
    altered_cookie[cookie_pos] = flipped
    const newCookie = Buffer.from(altered_cookie).toString('base64')
    return newCookie
}

async function findFlag(){
    try {
        for (let cookie_char_pos in original_cookie){
            console.log(`Checking for cookie pos: ${cookie_char_pos}`)
            const promiseList = []
            for(let i=0; i<128; i++){
                altered_cookie = bitFlip(cookie_char_pos, i)
                
                const headers = {
                    Cookie: `auth_name=${altered_cookie}`
                }

                promiseList.push(
                    axios.get('http://mercury.picoctf.net:56136/', { headers })
                )
            }
            const response = await Promise.all(promiseList)
           
            
            for(let i=0; i<128; i++){
                if(/picoCTF{.*}/.test(response[i].data)){
                    return response[i].data
                }
            }
            
            promiseList.length = 0
        }  
    } catch (error) {
        console.log(error)
    }   
}

findFlag().then(res => console.log(res)).catch(error => console.log(error))
